package baekjoon.stack;

import java.util.Scanner;
import java.util.Stack;

//°Ë¿­
//X
public class Q3111 {
	public static void main(String[] args)  {
		Scanner scan = new Scanner(System.in);
		String key = scan.next();
		String text = scan.next();
		Stack<Character> left = new Stack<>();
		Stack<Character> right = new Stack<>();
		
		int start = 0;
		int end = text.length()-1;
		boolean isRemove = false;
		int keyIdx = 0;
		while(start <= end) {
			if(!isRemove) {
				left.push(text.charAt(start++));
				if(left.peek() == key.charAt(keyIdx)) {
					keyIdx++;
				}else {
					keyIdx = 0;
				}
				System.out.println(keyIdx);
				if(keyIdx == key.length()) {
					keyIdx = 0;
					isRemove = true;
					for(int j=0; j<key.length(); j++) {
						left.pop();
					}
				}
				System.out.println(left.toString());
			}
			if(isRemove && start <= end) {
				String keyRev = new StringBuilder(key).reverse().toString();
				right.push(text.charAt(end--));
				int keyLen = key.length()-1;
				if(right.peek() == keyRev.charAt(keyLen)) {
					keyLen--;
				} else {
					keyLen = key.length()-1;
				}
				if(keyLen == -1) {
					for(int j=0; j<key.length(); j++) {
						right.pop();
					}
					isRemove = false;
				}
			}
		}
		while(!left.isEmpty()) {
			right.push(left.pop());
		}
		
		Stack<Character> ans = new Stack<>();
		while(!right.isEmpty()) {
			int keyLen = 0;
			ans.push(right.pop());
			if(ans.peek() == key.charAt(keyLen)) {
				keyLen++;
			} else {
				keyLen = 0;
			}
			if(keyLen == key.length()) {
				for(int j=0; j<key.length(); j++) {
					ans.pop();
				}
			}
		}
		for(int i=0; i<ans.size(); i++) {
			System.out.print(ans.get(i));
		}
	}
}

