package baekjoon;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Q11004 {
	static void swap(int [] a, int i, int j) {
		int temp = a[i];
		a[i] = a[j];
		a[j] = temp;
	}
	
	static int partition(int [] a, int start, int end) {
		int value = a[end];
		int i = start -1;
		for(int j=start; j<end; j++)
			if(a[j] < value)
				swap(a, ++i, j);
		swap(a, ++i, end);
		return i;
	}
	static int select(int [] a, int start, int end, int nth) {
		if(start>=end) return a[start];
		int middle = partition(a, start, end);
		int middle_nth = middle-start+1;
		if(middle_nth == nth)
			return a[middle];
		if(middle_nth > nth)
			return select(a, start, middle-1, nth);
		else
			return select(a, middle+1, end, nth-middle_nth);
	}
	public static void main(String[] args) {
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(reader.readLine());
		int n = Integer.parseInt(st.nextToken()); 
		int k = Integer.parseInt(st.nextToken()); 
		int [] array = new int[n];
		
		for(int i=0; i<n; i++)
			array[i] = Integer.parseInt(st.nextToken());
		System.out.println(select(array, 0, n-1, k));
		
	}

}
