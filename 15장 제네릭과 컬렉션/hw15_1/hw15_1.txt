[hw15_1] 카드 게임 ** raw type 사용 금지  
내    용 
에디터 특성상 수정 과정에서 타입 매개변수  부분이 삭제되었습니다. 다시 추가하였습니다. 제네릭 클래스 모든 과제에서 raw type 사용하지 마세요.

---------------------------------------------------------
교재 700쪽 LAB 카드 게임 작성하기(과제 맨 아래 부분 코드)를 여러번 실행해 보고 분석하여 이해한 후,
이를 참고하여 다음과 같은 프로그램을 작성하시오.

카드는 총 50장이며, 1~50 번호가 적혀있다.
딜러는 카드를 잘 섞어 두명의 플레이어에게 5장씩 나누어 준다.

- 게임 룰 : 가장 큰 값의 카드를 가진 플레이어가 승리한다.

- 프로그램은 다음과 같은 4개의 클래스로 구성된다.

(1) Card 클래스 ************ 그대로 사용해도 됨

// 카드 한 장을 표현하는 클래스 Card
  class Card {
   private int number; // 카드 번호

 public Card(int number) {
    this.number = number;
   }
   public int getNumber() {
    return number;
   }
   public String toString() {
    return Integer.toString(number);
   }
  }


  (2) Deck 클래스 ************* 그대로 사용해도 됨

// 카드 50장을 다루는 덱을 표현하는 클래스 Deck
  class Deck {
   public static final int MAX_NUMBER = 50;
   private ArrayList<Card> deck = new ArrayList<Card>();

 // 카드를 생성하여 덱에 넣음
 public Deck() {
    for (int i = 0; i < MAX_NUMBER; i++)
     deck.add(new Card(i));
   }

 // 카드를 섞음
 public void shuffle() {
    Collections.shuffle(deck);
   }

 // 덱의 맨 앞 카드를 제거하여 리턴
 public Card deal() {
    return deck.remove(0);
   }
  }

(3) Player 클래스 ************** 아래 메소드를 완성하시오.

// 자신의 카드 리스트를 지닌 플레이어 클래스 Player
  class Player {
   private ArrayList<Card> list = new ArrayList<Card>();

 public void getCard(Card card) {
    list.add(card);
   }

 public void showCards() {
    System.out.println(list);
   }
  
   // 자신이 지닌 카드 중 최대 카드를 리스트에서 삭제하고 리턴하는 메소드를 작성하시오.

 

 

}

(4) CardGame 클래스의 main() 메소드 ************** 다음을 수행하도록 작성하시오.

덱 객체를 하나 만듬
 덱의 카드를 섞음
 플레이어1, 플레이어2를 생성(p1, p2이라고 부르자)
p1과 p2에게 번갈아가며 5장씩 카드를 나누어줌
p1, p2의 카드 목록을 출력
p1, p2의 최대 카드를 알아내되 최대 카드를 버림
 게임 룰에 따라 승자가 누구인지 출력
p1, p2의 카드 목록을 출력

 

- 실행 예:

hw15_1: 홍길동

p1과 p2의 카드 목록
[3, 14, 46, 27, 39]
  [15, 47, 11, 12, 23]

p1과 p2의 최대 카드
46
  47
  p2 승리!

p1과 p2의 카드 목록
[3, 14, 27, 39]    
  [15, 11, 12, 23]


  ----------------------------------------------------------
목적
- 컬렉션 클래스와 메소드, ArrayList 클래스 사용을 연습한다.

----------------------------------------------------------
유의사항
- 적절한 comment
    작성자, 작성일, 파일 내용 설명 등의 주석을 파일의 가장 앞부분에 둘것
- 들여쓰기
- 식별자 이름을 관례에 맞게 적절히 붙일 것
- command-line에서 java -jar 과제코드.jar 로 채점합니다.
철자도 똑같게 이 명령이 제대로 실행되어야 합니다.
- 과제코드와 본인의 이름을 맨 처음 출력

----------------------------------------------------------
제출
- 과제코드.jar 파일
- .java 파일
 
